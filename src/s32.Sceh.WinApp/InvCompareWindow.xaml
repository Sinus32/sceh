<Window x:Class="s32.Sceh.WinApp.InvCompareWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ice="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:local="clr-namespace:s32.Sceh.WinApp"
    xmlns:ctl="clr-namespace:s32.Sceh.WinApp.Controls"
    xmlns:hlp="clr-namespace:s32.Sceh.WinApp.Helpers"
    xmlns:resx="clr-namespace:s32.Sceh.WinApp.Translations"
    xmlns:bbcw="clr-namespace:s32.Sceh.WinApp.BBCodeWriters"
    xmlns:code="clr-namespace:s32.Sceh.Code;assembly=ScehLib"
    xmlns:dm="clr-namespace:s32.Sceh.DataModel;assembly=ScehLib"
    Title="{x:Static resx:Strings.InvCompareWindowTitle}" MinHeight="400" MinWidth="580" Height="450" Width="970"
    Icon="Img/sceh.ico" ResizeMode="CanResizeWithGrip" WindowState="Maximized">
  <Window.CommandBindings>
    <CommandBinding Command="ApplicationCommands.New" CanExecute="ChangeProfile_CanExecute" Executed="ChangeProfile_Executed" />
    <CommandBinding Command="ApplicationCommands.Close" CanExecute="ExitApp_CanExecute" Executed="ExitApp_Executed" />
    <CommandBinding Command="ctl:ScehCommands.Compare" CanExecute="Compare_CanExecute" Executed="Compare_Executed" />
    <CommandBinding Command="ctl:ScehCommands.EditNote" CanExecute="EditNote_CanExecute" Executed="EditNote_Executed" />
    <CommandBinding Command="ctl:ScehCommands.MakeOffer" CanExecute="MakeOffer_CanExecute" Executed="MakeOffer_Executed" />
    <CommandBinding Command="ctl:ScehCommands.ShowHideCards" CanExecute="ShowHideCards_CanExecute" Executed="ShowHideCards_Executed" />
    <CommandBinding Command="ctl:ScehCommands.SelectCardsFromOffer" CanExecute="SelectCardsFromOffer_CanExecute" Executed="SelectCardsFromOffer_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenAllMarketPages" CanExecute="OpenAllMarketPages_CanExecute" Executed="OpenAllMarketPages_Executed" />
    <CommandBinding Command="ctl:ScehCommands.SortCards" CanExecute="SortCards_CanExecute" Executed="SortCards_Executed" />
    <CommandBinding Command="ctl:ScehCommands.DeselectCards" CanExecute="DeselectCards_CanExecute" Executed="DeselectCards_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenMarketPage" CanExecute="OpenMarketPage_CanExecute" Executed="OpenMarketPage_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenStorePage" CanExecute="OpenStorePage_CanExecute" Executed="OpenStorePage_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenBadgePage" CanExecute="OpenBadgePage_CanExecute" Executed="OpenBadgePage_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenTradingForum" CanExecute="OpenTradingForum_CanExecute" Executed="OpenTradingForum_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenProfilePage" CanExecute="OpenProfilePage_CanExecute" Executed="OpenProfilePage_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenInventoryPage" CanExecute="OpenInventoryPage_CanExecute" Executed="OpenInventoryPage_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenUserBadges" CanExecute="OpenUserBadges_CanExecute" Executed="OpenUserBadges_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenIncomingOffers" CanExecute="OpenIncomingOffers_CanExecute" Executed="OpenIncomingOffers_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenSentOffers" CanExecute="OpenSentOffers_CanExecute" Executed="OpenSentOffers_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenTradeTopics" CanExecute="OpenTradeTopics_CanExecute" Executed="OpenTradeTopics_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenPostHistory" CanExecute="OpenPostHistory_CanExecute" Executed="OpenPostHistory_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenSceInvPage" CanExecute="OpenSceInvPage_CanExecute" Executed="OpenSceInvPage_Executed" />
    <CommandBinding Command="ctl:ScehCommands.CopyName" CanExecute="CopyName_CanExecute" Executed="CopyName_Executed" />
    <CommandBinding Command="ctl:ScehCommands.CopyNamePlus" CanExecute="CopyNamePlus_CanExecute" Executed="CopyNamePlus_Executed" />
  </Window.CommandBindings>
  <Window.Resources>
    <Color x:Key="steamAppNormalColor" A="255" R="238" G="225" B="242" />
    <Color x:Key="cardNormalColor" A="255" R="62" G="196" B="71" />
    <Color x:Key="cardIsDuplicatedColor" A="255" R="247" G="201" B="72" />
    <Color x:Key="cardOtherHaveItColor" A="255" R="174" G="229" B="221" />
    <Color x:Key="cardIsSelectedColor" A="255" R="224" G="43" B="11" />
    <SolidColorBrush x:Key="steamAppNormalBrush" ice:Freeze="True" Color="{StaticResource steamAppNormalColor}" />
    <LinearGradientBrush x:Key="steamAppMyIsSelectedBrush" ice:Freeze="True" StartPoint="0,20" EndPoint="1,-19">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.2" />
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.4" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="steamAppOtherIsSelectedBrush" ice:Freeze="True" StartPoint="0,20" EndPoint="1,-19">
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.6" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.8" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="steamAppBothAreSelectedBrush" ice:Freeze="True" StartPoint="0,20" EndPoint="1,-19">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.2" />
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.4" />
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.6" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.8" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="cardNormalBrush" ice:Freeze="True" Color="{StaticResource cardNormalColor}" />
    <SolidColorBrush x:Key="cardIsDuplicatedBrush" ice:Freeze="True" Color="{StaticResource cardIsDuplicatedColor}" />
    <SolidColorBrush x:Key="cardOtherHaveItBrush" ice:Freeze="True" Color="{StaticResource cardOtherHaveItColor}" />
    <LinearGradientBrush x:Key="cardIsDuplicatedAndOtherHaveItBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.7" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardNormalColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardNormalColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedAndIsDuplicatedBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedAndOtherHaveItBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedAndIsDuplicatedAndOtherHaveItBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <Style x:Key="steamAppHeaderStyle" TargetType="{x:Type Rectangle}">
      <Setter Property="Fill" Value="{StaticResource steamAppNormalBrush}" />
      <Style.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding MyIsSelected}" Value="True" />
            <Condition Binding="{Binding OtherIsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Fill" Value="{StaticResource steamAppMyIsSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding MyIsSelected}" Value="False" />
            <Condition Binding="{Binding OtherIsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Fill" Value="{StaticResource steamAppOtherIsSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding MyIsSelected}" Value="True" />
            <Condition Binding="{Binding OtherIsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Fill" Value="{StaticResource steamAppBothAreSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="cardBorderStyle" TargetType="{x:Type Border}">
      <Setter Property="BorderBrush" Value="{StaticResource cardNormalBrush}" />
      <Setter Property="BorderThickness" Value="6,0,0,0" />
      <Setter Property="CornerRadius" Value="2" />
      <Style.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="False" />
            <Condition Binding="{Binding IsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsDuplicatedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="False" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsDuplicatedAndOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="False" />
            <Condition Binding="{Binding OtherHaveIt}" Value="False" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="False" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedAndIsDuplicatedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="False" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedAndOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedAndIsDuplicatedAndOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
      </Style.Triggers>
      <Style.Resources>
        <Style TargetType="ctl:LazyImage">
          <Style.Triggers>
            <DataTrigger Binding="{Binding OtherHaveIt}" Value="True">
              <Setter Property="Opacity" Value="0.45" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Style.Resources>
    </Style>
    <Style x:Key="cardAlternateText" TargetType="{x:Type TextBlock}">
      <Setter Property="Visibility" Value="Collapsed" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding DelayedLocalFilePath, ElementName=CardImage}" Value="{x:Null}">
          <Setter Property="Visibility" Value="Visible" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="myCardsColumn" TargetType="{x:Type ColumnDefinition}">
      <Setter Property="Width" Value="1*" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding DataContext.CompareWithSelf, ElementName=mainGrid}" Value="True">
          <Setter Property="Width" Value="9*" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="myCardsSummary" TargetType="{x:Type TextBlock}">
      <Setter Property="Foreground" Value="Black" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding MyIsSelected}" Value="True">
          <Setter Property="Foreground" Value="White" />
        </DataTrigger>
        <DataTrigger Binding="{Binding IHaveMoreThanHalf}" Value="True">
          <Setter Property="Foreground" Value="BlueViolet" />
          <Setter Property="FontWeight" Value="Bold" />
        </DataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding MyIsSelected}" Value="True" />
            <Condition Binding="{Binding IHaveMoreThanHalf}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Foreground" Value="Gold" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="otherCardsSummary" TargetType="{x:Type TextBlock}">
      <Setter Property="Foreground" Value="Black" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding OtherIsSelected}" Value="True">
          <Setter Property="Foreground" Value="White" />
        </DataTrigger>
        <DataTrigger Binding="{Binding HeHaveMoreThanHalf}" Value="True">
          <Setter Property="Foreground" Value="BlueViolet" />
          <Setter Property="FontWeight" Value="Bold" />
        </DataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding OtherIsSelected}" Value="True" />
            <Condition Binding="{Binding HeHaveMoreThanHalf}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Foreground" Value="Gold" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <DataTrigger Binding="{Binding DataContext.CompareWithSelf, ElementName=mainGrid}" Value="True">
          <Setter Property="Visibility" Value="Collapsed" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="sceState" TargetType="{x:Type Rectangle}">
      <Setter Property="Fill" Value="Black" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding SceState}" Value="{x:Static dm:SceAppState.Disabled}">
          <Setter Property="Fill" Value="DarkGray" />
        </DataTrigger>
        <DataTrigger Binding="{Binding SceState}" Value="{x:Static dm:SceAppState.NoCards}">
          <Setter Property="Fill" Value="CornflowerBlue" />
        </DataTrigger>
        <DataTrigger Binding="{Binding SceState}" Value="{x:Static dm:SceAppState.LastCard}">
          <Setter Property="Fill" Value="Firebrick" />
        </DataTrigger>
        <DataTrigger Binding="{Binding SceState}" Value="{x:Static dm:SceAppState.Normal}">
          <Setter Property="Fill" Value="LimeGreen" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="contextMenu" TargetType="{x:Type ContextMenu}">
      <Style.Resources>
        <Style TargetType="{x:Type MenuItem}">
          <Setter Property="CommandTarget" Value="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
          <Setter Property="CommandParameter" Value="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" />
        </Style>
      </Style.Resources>
    </Style>
    <CollectionViewSource x:Key="steamAppsView" Source="{Binding SteamApps}" Filter="CollectionViewSource_FilterByHideProp" />
    <ContextMenu x:Key="profileMenu" Style="{StaticResource contextMenu}">
      <MenuItem Header="{x:Static resx:MenuItems.Profile}" Command="ctl:ScehCommands.OpenProfilePage">
        <MenuItem.Icon>
          <Image Source="{StaticResource profileMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.CopyName}" Command="ctl:ScehCommands.CopyName">
        <MenuItem.Icon>
          <Image Source="{StaticResource copyMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.Inventory}" Command="ctl:ScehCommands.OpenInventoryPage">
        <MenuItem.Icon>
          <Image Source="{StaticResource backpackMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.Badges}" Command="ctl:ScehCommands.OpenUserBadges">
        <MenuItem.Icon>
          <Image Source="{StaticResource badgeMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.PostHistory}" Command="ctl:ScehCommands.OpenPostHistory">
        <MenuItem.Icon>
          <Image Source="{StaticResource postHistoryMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
    </ContextMenu>
    <ContextMenu x:Key="steamAppMenu" Style="{StaticResource contextMenu}">
      <MenuItem Header="{x:Static resx:MenuItems.StorePage}" Command="ctl:ScehCommands.OpenStorePage">
        <MenuItem.Icon>
          <Image Source="{StaticResource gameMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.MarketPage}" Command="ctl:ScehCommands.OpenMarketPage">
        <MenuItem.Icon>
          <Image Source="{StaticResource marketMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.CopyGameName}" Command="ctl:ScehCommands.CopyName">
        <MenuItem.Icon>
          <Image Source="{StaticResource copyMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <Separator />
      <MenuItem Header="{x:Static resx:MenuItems.BadgePage}" Command="ctl:ScehCommands.OpenBadgePage">
        <MenuItem.Icon>
          <Image Source="{StaticResource badgeMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.TradingForum}" Command="ctl:ScehCommands.OpenTradingForum">
        <MenuItem.Icon>
          <Image Source="{StaticResource forumMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.OpenSceInvPage}" Command="ctl:ScehCommands.OpenSceInvPage">
        <MenuItem.Icon>
          <Image Source="{StaticResource sceIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
    </ContextMenu>
    <ContextMenu x:Key="cardMenu" Style="{StaticResource contextMenu}">
      <MenuItem Header="{x:Static resx:MenuItems.MarketPage}" Command="ctl:ScehCommands.OpenMarketPage">
        <MenuItem.Icon>
          <Image Source="{StaticResource marketMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.CopyCardName}" Command="ctl:ScehCommands.CopyName">
        <MenuItem.Icon>
          <Image Source="{StaticResource copyMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.CopyGameAndCardName}" Command="ctl:ScehCommands.CopyNamePlus">
        <MenuItem.Icon>
          <Image Source="{StaticResource copyPlusMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <Separator />
      <MenuItem Header="{x:Static resx:MenuItems.BadgePage}" Command="ctl:ScehCommands.OpenBadgePage">
        <MenuItem.Icon>
          <Image Source="{StaticResource badgeMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.TradingForum}" Command="ctl:ScehCommands.OpenTradingForum">
        <MenuItem.Icon>
          <Image Source="{StaticResource forumMenuIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.OpenSceInvPage}" Command="ctl:ScehCommands.OpenSceInvPage">
        <MenuItem.Icon>
          <Image Source="{StaticResource sceIcon}" Width="20" Height="20" />
        </MenuItem.Icon>
      </MenuItem>
    </ContextMenu>
    <DataTemplate x:Key="cardTemplate" DataType="dm:Card">
      <ToggleButton IsChecked="{Binding IsSelected}" ContextMenu="{StaticResource cardMenu}"
          ToolTipService.InitialShowDelay="100" ToolTipService.ShowDuration="180000">
        <ToggleButton.ToolTip>
          <TextBlock>
            <Run Text="{Binding ItemClassName, Mode=OneWay}" FontStyle="Italic" />: <Run Text="{Binding Name, Mode=OneWay}" FontWeight="Bold" /><LineBreak />
            <Run Text="{Binding MarketHashName, Mode=OneWay}" /><LineBreak />
            <Run Text="{Binding DroprateName, Mode=OneWay}" />
          </TextBlock>
        </ToggleButton.ToolTip>
        <Grid>
          <Border Style="{StaticResource cardBorderStyle}">
            <ctl:LazyImage x:Name="CardImage" ImageFile="{Binding Converter={StaticResource cardImageFileConv}, Mode=OneWay}"
                NewFilePriority="{x:Static code:DownloadPriority.Medium}" OldFilePriority="{x:Static code:DownloadPriority.Low}"
                Width="77" Height="89" Stretch="Uniform" Delay="400"
                Source="{Binding DelayedLocalFilePath, RelativeSource={RelativeSource Self}, TargetNullValue={StaticResource defaultCard}, Mode=OneWay, IsAsync=True, Converter={StaticResource imageLoader}}" />
          </Border>
          <Image Source="{StaticResource nonMarketable}" Visibility="{Binding Marketable, Converter={StaticResource hideToVisibilityConv}, Mode=OneWay}"
              Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
          <TextBlock Text="{Binding Name, Mode=OneWay}" FontSize="11" Width="72" Height="60" Margin="7,12,0,0" TextAlignment="Center"
              VerticalAlignment="Top" TextWrapping="Wrap" Style="{StaticResource cardAlternateText}" />
        </Grid>
      </ToggleButton>
    </DataTemplate>
    <DataTemplate x:Key="steamAppTemplate" DataType="dm:SteamApp">
      <Grid ContextMenu="{StaticResource steamAppMenu}">
        <Grid.Resources>
          <CollectionViewSource x:Key="myCardsView" Source="{Binding MyCards, Mode=OneWay}" Filter="CollectionViewSource_FilterByHideProp" />
          <CollectionViewSource x:Key="otherCardsView" Source="{Binding OtherCards, Mode=OneWay}" Filter="CollectionViewSource_FilterByHideProp" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Style="{StaticResource myCardsColumn}" />
          <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Rectangle Style="{StaticResource steamAppHeaderStyle}" Grid.ColumnSpan="2" />
        <TextBlock Grid.Column="0" TextAlignment="Left" Padding="10,3" Style="{StaticResource myCardsSummary}">
          <TextBlock.Text>
            <MultiBinding StringFormat="{x:Static resx:Strings.AppCardsSummary}">
              <Binding Path="MyCardsTotal" Mode="OneWay" />
              <Binding Path="MyUniqueCards" Mode="OneWay" />
              <Binding Path="TotalUniqueCards" Mode="OneWay" />
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
        <TextBlock Grid.Column="1" TextAlignment="Right" Padding="10,3" Style="{StaticResource otherCardsSummary}">
          <TextBlock.Text>
            <MultiBinding StringFormat="{x:Static resx:Strings.AppCardsSummary}">
              <Binding Path="OtherCardsTotal" Mode="OneWay" />
              <Binding Path="OtherUniqueCards" Mode="OneWay" />
              <Binding Path="TotalUniqueCards" Mode="OneWay" />
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
        <TextBlock TextAlignment="Center" Padding="0,3" Grid.ColumnSpan="2">
          <TextBlock.Inlines>
            <Run Text="{Binding Name, Mode=OneWay}" />
            <InlineUIContainer BaselineAlignment="Center">
              <Image Source="{StaticResource nonMarketable}" Visibility="{Binding Marketable, Converter={StaticResource hideToVisibilityConv}, Mode=OneWay}"
                Margin="0,0,12,0" Height="14" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
            </InlineUIContainer>
            <Run Text="{Binding CardAvg, StringFormat=${0:F2}}" />
            <InlineUIContainer BaselineAlignment="Center">
              <Rectangle Margin="8,0,0,0" Width="7" Height="7" Style="{StaticResource sceState}" />
            </InlineUIContainer>
            <Run Text="{Binding SceWorth, Mode=OneWay, StringFormat={}{0}c}" />
          </TextBlock.Inlines>
        </TextBlock>
        <ItemsControl Grid.Row="1" Grid.Column="0" Margin="0,0,30,0"
            ItemsSource="{Binding Source={StaticResource myCardsView}}"
            ItemTemplate="{StaticResource cardTemplate}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemContainerStyle>
            <Style TargetType="{x:Type ContentPresenter}">
              <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Panel.ZIndex" Value="99" />
                </Trigger>
              </Style.Triggers>
              <Style.Resources>
                <Style TargetType="{x:Type ToggleButton}">
                  <Setter Property="Margin" Value="1,1,-30,1" />
                </Style>
              </Style.Resources>
            </Style>
          </ItemsControl.ItemContainerStyle>
        </ItemsControl>
        <ItemsControl Grid.Row="1" Grid.Column="1" Margin="30,0,0,0"
            ItemsSource="{Binding Source={StaticResource otherCardsView}}"
            ItemTemplate="{StaticResource cardTemplate}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemContainerStyle>
            <Style TargetType="{x:Type ContentPresenter}">
              <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Panel.ZIndex" Value="99" />
                </Trigger>
              </Style.Triggers>
              <Style.Resources>
                <Style TargetType="{x:Type ToggleButton}">
                  <Setter Property="Margin" Value="-30,1,1,1" />
                </Style>
              </Style.Resources>
            </Style>
          </ItemsControl.ItemContainerStyle>
        </ItemsControl>
      </Grid>
    </DataTemplate>
  </Window.Resources>
  <Grid Name="mainGrid">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="40" />
      <ColumnDefinition Width="3*" />
      <ColumnDefinition Width="2*" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <Menu Grid.Row="0" Grid.ColumnSpan="3">
      <MenuItem Header="{x:Static resx:MenuItems.MyProfile}">
        <MenuItem Header="{x:Static resx:MenuItems.Profile}" Command="ctl:ScehCommands.OpenProfilePage" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource profileMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.CopyName}" Command="ctl:ScehCommands.CopyName" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource copyMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.Inventory}" Command="ctl:ScehCommands.OpenInventoryPage" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource backpackMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.Badges}" Command="ctl:ScehCommands.OpenUserBadges" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource badgeMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.SentOffers}" Command="ctl:ScehCommands.OpenSentOffers" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource sentMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.IncomingOffers}" Command="ctl:ScehCommands.OpenIncomingOffers" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource receivedMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.TradeTopics}" Command="ctl:ScehCommands.OpenTradeTopics" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource dealMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.PostHistory}" Command="ctl:ScehCommands.OpenPostHistory" CommandParameter="{Binding OwnerProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource postHistoryMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.EditNote}" Command="ctl:ScehCommands.EditNote" CommandParameter="{Binding OwnerProfile.Notes}">
          <MenuItem.Icon>
            <Image Source="{StaticResource noteMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.ChangeProfile}" Command="ApplicationCommands.New">
          <MenuItem.Icon>
            <Image Source="{StaticResource changeMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.Exit}" Command="ApplicationCommands.Close">
          <MenuItem.Icon>
            <Image Source="{StaticResource exitMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.OthersProfile}">
        <MenuItem Header="{x:Static resx:MenuItems.Profile}" Command="ctl:ScehCommands.OpenProfilePage" CommandParameter="{Binding SecondProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource profileMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.CopyName}" Command="ctl:ScehCommands.CopyName" CommandParameter="{Binding SecondProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource copyMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.Inventory}" Command="ctl:ScehCommands.OpenInventoryPage" CommandParameter="{Binding SecondProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource backpackMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.Badges}" Command="ctl:ScehCommands.OpenUserBadges" CommandParameter="{Binding SecondProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource badgeMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.PostHistory}" Command="ctl:ScehCommands.OpenPostHistory" CommandParameter="{Binding SecondProfile}">
          <MenuItem.Icon>
            <Image Source="{StaticResource postHistoryMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.EditNote}" Command="ctl:ScehCommands.EditNote" CommandParameter="{Binding SecondProfile.Notes}">
          <MenuItem.Icon>
            <Image Source="{StaticResource noteMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.MakeOffer}" Command="ctl:ScehCommands.MakeOffer" CommandParameter="{Binding SecondProfile.Notes}">
          <MenuItem.Icon>
            <Image Source="{StaticResource tradeLinkMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.SortCards}">
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByNameAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByName</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByNameDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByName,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByCardAvgPriceAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByCardAvgPrice</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByCardAvgPriceDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByCardAvgPrice,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_BySceWorthAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>BySceWorth</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_BySceWorthDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>BySceWorth,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByTotalUniqueCardsAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByTotalUniqueCards</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByTotalUniqueCardsDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByTotalUniqueCards,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByMyCardsSurplusAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByMyCardsSurplus</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByMyCardsSurplusDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByMyCardsSurplus,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByOtherCardsSurplusAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByOtherCardsSurplus</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByOtherCardsSurplusDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByOtherCardsSurplus,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByMySetCompletionRateAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByMySetCompletionRate</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByMySetCompletionRateDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByMySetCompletionRate,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByOtherSetCompletionRateAsc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByOtherSetCompletionRate</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.SortCards_ByOtherSetCompletionRateDesc}" Command="ctl:ScehCommands.SortCards">
          <MenuItem.CommandParameter>
            <hlp:SteamAppSort>ByOtherSetCompletionRate,Descending</hlp:SteamAppSort>
          </MenuItem.CommandParameter>
        </MenuItem>
      </MenuItem>
      <MenuItem Header="{x:Static resx:MenuItems.Selection}">
        <MenuItem Header="{x:Static resx:MenuItems.SelectCardsFromOffer}" Command="ctl:ScehCommands.SelectCardsFromOffer">
          <MenuItem.Icon>
            <Image Source="{StaticResource selectFromOfferMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.OpenAllMarketPages}" Command="ctl:ScehCommands.OpenAllMarketPages" CommandParameter="{Binding AllSelectedCards}">
          <MenuItem.Icon>
            <Image Source="{StaticResource marketMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="{x:Static resx:MenuItems.DeselectMyCards}" Command="ctl:ScehCommands.DeselectCards" CommandParameter="{Binding MySelectedCards}">
          <MenuItem.Icon>
            <Image Source="{StaticResource deselectMyCardsMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.DeselectOtherCards}" Command="ctl:ScehCommands.DeselectCards" CommandParameter="{Binding OtherSelectedCards}">
          <MenuItem.Icon>
            <Image Source="{StaticResource deselectOtherCardsMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="{x:Static resx:MenuItems.DeselectAllCards}" Command="ctl:ScehCommands.DeselectCards" CommandParameter="{Binding AllSelectedCards}">
          <MenuItem.Icon>
            <Image Source="{StaticResource deselectAllCardsMenuIcon}" Width="20" Height="20" />
          </MenuItem.Icon>
        </MenuItem>
      </MenuItem>
    </Menu>
    <ctl:LazyImage ImageFile="{Binding AvatarSmallUrl, Converter={StaticResource avatarImageFileConv}}" Stretch="None"
        NewFilePriority="{x:Static code:DownloadPriority.High}" OldFilePriority="{x:Static code:DownloadPriority.Low}"
        Source="{Binding LocalFilePath, RelativeSource={RelativeSource Self}, TargetNullValue={StaticResource defaultAvatar}, Mode=OneWay, IsAsync=True, Converter={StaticResource imageLoader}}"
        ContextMenu="{StaticResource profileMenu}" DataContext="{Binding OwnerProfile}" Grid.Row="1" Grid.RowSpan="2" />
    <TextBlock Text="{Binding Name}" DataContext="{Binding OwnerProfile}" VerticalAlignment="Center"
        ContextMenu="{StaticResource profileMenu}" FontSize="16" Margin="2" Grid.Row="1" Grid.Column="1" />
    <ctl:LazyImage ImageFile="{Binding AvatarSmallUrl, Converter={StaticResource avatarImageFileConv}}" Stretch="Uniform"
        NewFilePriority="{x:Static code:DownloadPriority.High}" OldFilePriority="{x:Static code:DownloadPriority.Low}"
        Source="{Binding LocalFilePath, RelativeSource={RelativeSource Self}, TargetNullValue={StaticResource defaultAvatar}, Mode=OneWay, IsAsync=True, Converter={StaticResource imageLoader}}"
        ContextMenu="{StaticResource profileMenu}" DataContext="{Binding SecondProfile}" Grid.Row="3" Height="26" />
    <TextBlock Text="{Binding Name}" DataContext="{Binding SecondProfile}" VerticalAlignment="Center"
        ContextMenu="{StaticResource profileMenu}" FontSize="16" Margin="2" Grid.Row="3" Grid.Column="1" />
    <ComboBox x:Name="cbOtherProfile" IsEditable="True" ItemsSource="{Binding SteamProfiles}"
        VerticalAlignment="Center" Style="{StaticResource steamProfileComboBox}" Grid.Row="2" Grid.Column="1">
      <ComboBox.InputBindings>
        <KeyBinding Command="ctl:ScehCommands.Compare" Key="Return" />
      </ComboBox.InputBindings>
    </ComboBox>
    <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="2,0">
      <Button Margin="2,0" Padding="2" DataContext="{Binding SelectedItem, ElementName=cbOtherProfile}"
          Command="ctl:ScehCommands.EditNote" CommandParameter="{Binding Notes}">
        <StackPanel Orientation="Horizontal" Style="{DynamicResource noteIconToolTip}">
          <Image Source="{StaticResource noteIcon}" Stretch="None" />
          <AccessText Text="{x:Static resx:Buttons.Notes}" Margin="6,0" MinWidth="60"
              VerticalAlignment="Center" TextAlignment="Center" />
        </StackPanel>
      </Button>
      <Button Margin="2,0" Padding="2" Command="ctl:ScehCommands.Compare">
        <StackPanel Orientation="Horizontal">
          <Image Source="{StaticResource compareIcon}" Stretch="None" />
          <AccessText Margin="6,0" MinWidth="60" VerticalAlignment="Center" TextAlignment="Center">
            <AccessText.Style>
              <Style TargetType="AccessText">
                <Setter Property="Text" Value="{x:Static resx:Buttons.Compare}" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding MyProfileSelected}" Value="True">
                    <Setter Property="Text" Value="{x:Static resx:Buttons.Show}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </AccessText.Style>
          </AccessText>
        </StackPanel>
      </Button>
    </StackPanel>
    <StackPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.FindCards}"
          Command="ctl:ScehCommands.ShowHideCards">
        <Image Source="{StaticResource selection1}" Stretch="None" />
      </Button>
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.ShowTradeSugestions}"
          Command="ctl:ScehCommands.ShowHideCards" CommandParameter="{x:Static code:CardsCompareManager.ShowTradeSugestionsStrategy}">
        <Image Source="{StaticResource selection2}" Stretch="None" />
      </Button>
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.ShowDuplicates}"
          Command="ctl:ScehCommands.ShowHideCards" CommandParameter="{x:Static code:CardsCompareManager.ShowDuplicatesStrategy}">
        <Image Source="{StaticResource selection3}" Stretch="None" />
      </Button>
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.ShowMyCards}"
          Command="ctl:ScehCommands.ShowHideCards" CommandParameter="{x:Static code:CardsCompareManager.ShowMyCardsStrategy}">
        <Image Source="{StaticResource selection4}" Stretch="None" />
      </Button>
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.ShowAll}"
          Command="ctl:ScehCommands.ShowHideCards" CommandParameter="{x:Static code:CardsCompareManager.ShowAllStrategy}">
        <Image Source="{StaticResource selection5}" Stretch="None" />
      </Button>
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.ShowOtherCards}"
          Command="ctl:ScehCommands.ShowHideCards" CommandParameter="{x:Static code:CardsCompareManager.ShowOtherCardsStrategy}">
        <Image Source="{StaticResource selection6}" Stretch="None" />
      </Button>
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.ShowSelectedApp}"
          Command="ctl:ScehCommands.ShowHideCards" CommandParameter="{x:Static code:CardsCompareManager.ShowSelectedAppStrategy}">
        <Image Source="{StaticResource selection7}" Stretch="None" />
      </Button>
      <Button Margin="2" ToolTip="{x:Static resx:Buttons.ShowOnlySelected}"
          Command="ctl:ScehCommands.ShowHideCards" CommandParameter="{x:Static code:CardsCompareManager.ShowOnlySelectedStrategy}">
        <Image Source="{StaticResource selection8}" Stretch="None" />
      </Button>
    </StackPanel>
    <ItemsControl Grid.Row="4" Grid.ColumnSpan="3" VirtualizingPanel.CacheLength="3" VirtualizingPanel.CacheLengthUnit="Item"
        ItemsSource="{Binding Source={StaticResource steamAppsView}}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
        ScrollViewer.CanContentScroll="True" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
        BorderThickness="0,1" ItemTemplate="{StaticResource steamAppTemplate}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.Template>
        <ControlTemplate>
          <Border SnapsToDevicePixels="True"
              BorderThickness="{TemplateBinding Border.BorderThickness}"
              Padding="{TemplateBinding Control.Padding}"
              BorderBrush="{TemplateBinding Border.BorderBrush}"
              Background="{TemplateBinding Panel.Background}">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </ItemsControl.Template>
    </ItemsControl>
    <StatusBar Grid.Row="5" Grid.ColumnSpan="3">
      <StatusBarItem DataContext="{x:Static code:CommunicationState.Instance}">
        <TextBlock Text="{Binding RequestCount, StringFormat={x:Static resx:Strings.RequestCountFormat}}"
            ToolTipService.ShowDuration="30000">
          <TextBlock.ToolTip>
            <ctl:BBCodeBlock BBCodeText="{x:Static resx:Strings.RequestCountToolTip}" TextWrapping="Wrap" />
          </TextBlock.ToolTip>
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsInProgress}" Value="True">
                  <Setter Property="Foreground" Value="{StaticResource foregroundGreenBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsRepeating}" Value="True">
                  <Setter Property="Foreground" Value="{StaticResource foregroundRedBrush}" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
      </StatusBarItem>
      <StatusBarItem DataContext="{x:Static code:CommunicationState.Instance}">
        <Image Height="16" ToolTipService.ShowDuration="30000">
          <Image.ToolTip>
            <ctl:BBCodeBlock BBCodeText="{x:Static resx:Strings.TransferOnOffToolTip}" TextWrapping="Wrap" />
          </Image.ToolTip>
          <Image.Style>
            <Style TargetType="Image">
              <Setter Property="Source" Value="{StaticResource transferOff}" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsInProgress}" Value="True">
                  <Setter Property="Source" Value="{StaticResource transferOn}" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Image.Style>
        </Image>
      </StatusBarItem>
      <StatusBarItem DataContext="{x:Static code:CommunicationState.Instance}">
        <Image Height="16" ToolTipService.ShowDuration="30000">
          <Image.ToolTip>
            <ctl:BBCodeBlock BBCodeText="{x:Static resx:Strings.AlertOnOffToolTip}" TextWrapping="Wrap" />
          </Image.ToolTip>
          <Image.Style>
            <Style TargetType="Image">
              <Setter Property="Source" Value="{StaticResource alertOff}" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsRepeating}" Value="True">
                  <Setter Property="Source" Value="{StaticResource alertOn}" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Image.Style>
        </Image>
      </StatusBarItem>
      <Separator />
      <StatusBarItem DataContext="{x:Static code:CommunicationState.Instance}">
        <TextBlock ToolTipService.ShowDuration="30000">
          <TextBlock.ToolTip>
            <TextBlock>
              <Run Text="{x:Static resx:Strings.ImagesToDownload}" />
              <Run Text="{Binding ImagesToDownload}" FontWeight="Bold" /><LineBreak />
              <Run Text="{x:Static resx:Strings.ImagesNotModified}" />
              <Run Text="{Binding ImagesNotModified}" FontWeight="Bold" /><LineBreak />
              <Run Text="{x:Static resx:Strings.ImagesDownloaded}" />
              <Run Text="{Binding ImagesDownloaded}" FontWeight="Bold" />
            </TextBlock>
          </TextBlock.ToolTip>
          <TextBlock.Text>
            <MultiBinding StringFormat="{x:Static resx:Strings.ImagesToDownloadFormat}">
              <Binding Path="ImagesToDownload" />
              <Binding Path="ImageRequests" />
              <Binding Path="ImagesNotModified" />
              <Binding Path="ImagesDownloaded" />
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
      </StatusBarItem>
    </StatusBar>
  </Grid>
</Window>
