<Window x:Class="s32.Sceh.WinApp.InvCompareWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ice="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:local="clr-namespace:s32.Sceh.WinApp"
    xmlns:ctl="clr-namespace:s32.Sceh.WinApp.Controls"
    xmlns:resx="clr-namespace:s32.Sceh.WinApp.Translations"
    xmlns:code="clr-namespace:s32.Sceh.Code;assembly=ScehLib"
    xmlns:dm="clr-namespace:s32.Sceh.DataModel;assembly=ScehLib"
    Title="InvCompareWindow" Height="450" Width="970" Icon="Img/sceh.ico" ResizeMode="CanResizeWithGrip" WindowState="Maximized">
  <Window.CommandBindings>
    <CommandBinding Command="ApplicationCommands.New" CanExecute="ChangeProfileCommand_CanExecute" Executed="ChangeProfileCommand_Executed" />
    <CommandBinding Command="ApplicationCommands.Close" CanExecute="ExitAppCommand_CanExecute" Executed="ExitAppCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.CompareCommand" CanExecute="CompareCommand_CanExecute" Executed="CompareCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.EditNoteCommand" CanExecute="EditNoteCommand_CanExecute" Executed="EditNoteCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.ShowHideCardsCommand" CanExecute="ShowHideCardsCommand_CanExecute" Executed="ShowHideCardsCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenMarketPageCommand" CanExecute="OpenMarketPageCommand_CanExecute" Executed="OpenMarketPageCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenStorePageCommand" CanExecute="OpenStorePageCommand_CanExecute" Executed="OpenStorePageCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenBadgePageCommand" CanExecute="OpenBadgePageCommand_CanExecute" Executed="OpenBadgePageCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenTradingForumCommand" CanExecute="OpenTradingForumCommand_CanExecute" Executed="OpenTradingForumCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenProfilePageCommand" CanExecute="OpenProfilePageCommand_CanExecute" Executed="OpenProfilePageCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenInventoryPageCommand" CanExecute="OpenInventoryPageCommand_CanExecute" Executed="OpenInventoryPageCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenUserBadgesCommand" CanExecute="OpenUserBadgesCommand_CanExecute" Executed="OpenUserBadgesCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenTradeOffersCommand" CanExecute="OpenTradeOffersCommand_CanExecute" Executed="OpenTradeOffersCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenTradeTopicsCommand" CanExecute="OpenTradeTopicsCommand_CanExecute" Executed="OpenTradeTopicsCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.OpenPostHistoryCommand" CanExecute="OpenPostHistoryCommand_CanExecute" Executed="OpenPostHistoryCommand_Executed" />
    <CommandBinding Command="ctl:ScehCommands.CopyNameCommand" CanExecute="CopyNameCommand_CanExecute" Executed="CopyNameCommand_Executed" />
  </Window.CommandBindings>
  <Window.Resources>
    <Color x:Key="steamAppNormalColor" A="255" R="238" G="225" B="242" />
    <Color x:Key="cardNormalColor" A="255" R="62" G="196" B="71" />
    <Color x:Key="cardIsDuplicatedColor" A="255" R="247" G="201" B="72" />
    <Color x:Key="cardOtherHaveItColor" A="255" R="174" G="229" B="221" />
    <Color x:Key="cardIsSelectedColor" A="255" R="224" G="43" B="11" />
    <SolidColorBrush x:Key="steamAppNormalBrush" ice:Freeze="True" Color="{StaticResource steamAppNormalColor}" />
    <LinearGradientBrush x:Key="steamAppMyIsSelectedBrush" ice:Freeze="True" StartPoint="0,20" EndPoint="1,-19">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.2" />
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.4" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="steamAppOtherIsSelectedBrush" ice:Freeze="True" StartPoint="0,20" EndPoint="1,-19">
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.6" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.8" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="steamAppBothAreSelectedBrush" ice:Freeze="True" StartPoint="0,20" EndPoint="1,-19">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.2" />
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.4" />
      <GradientStop Color="{StaticResource steamAppNormalColor}" Offset="0.6" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.8" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="cardNormalBrush" ice:Freeze="True" Color="{StaticResource cardNormalColor}" />
    <SolidColorBrush x:Key="cardIsDuplicatedBrush" ice:Freeze="True" Color="{StaticResource cardIsDuplicatedColor}" />
    <SolidColorBrush x:Key="cardOtherHaveItBrush" ice:Freeze="True" Color="{StaticResource cardOtherHaveItColor}" />
    <LinearGradientBrush x:Key="cardIsDuplicatedAndOtherHaveItBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.7" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardNormalColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardNormalColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedAndIsDuplicatedBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedAndOtherHaveItBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="cardIsSelectedAndIsDuplicatedAndOtherHaveItBrush" ice:Freeze="True" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.1" />
      <GradientStop Color="{StaticResource cardOtherHaveItColor}" Offset="0.3" />
      <GradientStop Color="{StaticResource cardIsDuplicatedColor}" Offset="0.7" />
      <GradientStop Color="{StaticResource cardIsSelectedColor}" Offset="0.9" />
    </LinearGradientBrush>
    <Style x:Key="steamAppHeaderStyle" TargetType="Rectangle">
      <Setter Property="Fill" Value="{StaticResource steamAppNormalBrush}" />
      <Style.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding MyIsSelected}" Value="True" />
            <Condition Binding="{Binding OtherIsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Fill" Value="{StaticResource steamAppMyIsSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding MyIsSelected}" Value="False" />
            <Condition Binding="{Binding OtherIsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Fill" Value="{StaticResource steamAppOtherIsSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding MyIsSelected}" Value="True" />
            <Condition Binding="{Binding OtherIsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="Fill" Value="{StaticResource steamAppBothAreSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="cardBorderStyle" TargetType="Border">
      <Setter Property="BorderBrush" Value="{StaticResource cardNormalBrush}" />
      <Setter Property="BorderThickness" Value="6,0,0,0" />
      <Setter Property="CornerRadius" Value="2" />
      <Style.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="False" />
            <Condition Binding="{Binding IsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsDuplicatedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="False" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="False" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsDuplicatedAndOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="False" />
            <Condition Binding="{Binding OtherHaveIt}" Value="False" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="False" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedAndIsDuplicatedBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="False" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedAndOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsDuplicated}" Value="True" />
            <Condition Binding="{Binding OtherHaveIt}" Value="True" />
            <Condition Binding="{Binding IsSelected}" Value="True" />
          </MultiDataTrigger.Conditions>
          <MultiDataTrigger.Setters>
            <Setter Property="BorderBrush" Value="{StaticResource cardIsSelectedAndIsDuplicatedAndOtherHaveItBrush}" />
          </MultiDataTrigger.Setters>
        </MultiDataTrigger>
      </Style.Triggers>
      <Style.Resources>
        <Style TargetType="ctl:LazyImage">
          <Style.Triggers>
            <DataTrigger Binding="{Binding OtherHaveIt}" Value="True">
              <Setter Property="Opacity" Value="0.45" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </Style.Resources>
    </Style>
    <Style x:Key="requestCountStyle" TargetType="TextBlock">
      <Setter Property="Foreground" Value="#BACBD1" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsInProgress, Source={x:Static code:SteamDataDownloader.Info}}" Value="True">
          <Setter Property="Foreground" Value="#38A800" />
        </DataTrigger>
        <DataTrigger Binding="{Binding IsRepeating, Source={x:Static code:SteamDataDownloader.Info}}" Value="True">
          <Setter Property="Foreground" Value="#DE4426" />
          <Setter Property="FontWeight" Value="ExtraBold" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="cardAlternateText" TargetType="TextBlock">
      <Setter Property="Visibility" Value="Collapsed" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding DelayedLocalFilePath, ElementName=CardImage}" Value="{x:Null}">
          <Setter Property="Visibility" Value="Visible" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <CollectionViewSource x:Key="steamAppsView" Source="{Binding SteamApps}" Filter="CollectionViewSource_FilterByHideProp" />
    <ContextMenu x:Key="profileMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
      <MenuItem Header="{x:Static resx:Strings.MenuItem_Profile}" Command="ctl:ScehCommands.OpenProfilePageCommand" CommandParameter="{Binding}" />
      <MenuItem Header="{x:Static resx:Strings.MenuItem_Inventory}" Command="ctl:ScehCommands.OpenInventoryPageCommand" CommandParameter="{Binding}" />
      <MenuItem Header="{x:Static resx:Strings.MenuItem_Badges}" Command="ctl:ScehCommands.OpenUserBadgesCommand" CommandParameter="{Binding}" />
      <MenuItem Header="{x:Static resx:Strings.MenuItem_PostHistory}" Command="ctl:ScehCommands.OpenPostHistoryCommand" CommandParameter="{Binding}" />
    </ContextMenu>
    <ContextMenu x:Key="steamAppMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_CopyName}" Command="ctl:ScehCommands.CopyNameCommand" CommandParameter="{Binding}" />
      <Separator />
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_BadgePage}" Command="ctl:ScehCommands.OpenBadgePageCommand" CommandParameter="{Binding}" />
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_TradingForum}" Command="ctl:ScehCommands.OpenTradingForumCommand" CommandParameter="{Binding}" />
      <Separator />
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_StorePage}" Command="ctl:ScehCommands.OpenStorePageCommand" CommandParameter="{Binding}" />
    </ContextMenu>
    <ContextMenu x:Key="cardMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_MarketPage}" Command="ctl:ScehCommands.OpenMarketPageCommand" CommandParameter="{Binding}" />
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_CopyName}" Command="ctl:ScehCommands.CopyNameCommand" CommandParameter="{Binding}" />
      <Separator />
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_BadgePage}" Command="ctl:ScehCommands.OpenBadgePageCommand" CommandParameter="{Binding}" />
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_StorePage}" Command="ctl:ScehCommands.OpenStorePageCommand" CommandParameter="{Binding}" />
      <Separator />
      <MenuItem Header="{x:Static resx:Strings.CardContextMenu_TradingForum}" Command="ctl:ScehCommands.OpenTradingForumCommand" CommandParameter="{Binding}" />
    </ContextMenu>
    <DataTemplate x:Key="cardTemplate" DataType="dm:Card">
      <ToggleButton Margin="1" IsChecked="{Binding IsSelected}" ToolTip="{Binding Name}" ContextMenu="{StaticResource cardMenu}" MouseDoubleClick="CardButton_MouseDoubleClick">
        <Grid>
          <Border Style="{StaticResource cardBorderStyle}">
            <ctl:LazyImage Name="CardImage" ImageFile="{Binding Converter={StaticResource cardImageFileConv}}"
                NewFilePriority="{x:Static code:DownloadPriority.Medium}" OldFilePriority="{x:Static code:DownloadPriority.Low}"
                Width="77" Height="89" Stretch="Uniform" Delay="200"
                Source="{Binding DelayedLocalFilePath, RelativeSource={RelativeSource Self}, TargetNullValue={StaticResource defaultCard}, Mode=OneWay, IsAsync=True, Converter={StaticResource imageLoader}}" />
          </Border>
          <Image Source="{StaticResource nonMarketable}" Visibility="{Binding Marketable, Converter={StaticResource hideToVisibilityConv}}"
              Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
          <TextBlock Text="{Binding Name}" FontSize="11" Width="72" Height="60" Margin="7,12,0,0" TextAlignment="Center"
              VerticalAlignment="Top" TextWrapping="WrapWithOverflow" Style="{StaticResource cardAlternateText}" />
        </Grid>
      </ToggleButton>
    </DataTemplate>
    <DataTemplate x:Key="steamAppTemplate" DataType="dm:SteamApp">
      <Grid ContextMenu="{StaticResource steamAppMenu}">
        <Grid.Resources>
          <CollectionViewSource x:Key="myCardsView" Source="{Binding MyCards}" Filter="CollectionViewSource_FilterByHideProp" />
          <CollectionViewSource x:Key="otherCardsView" Source="{Binding OtherCards}" Filter="CollectionViewSource_FilterByHideProp" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="1*" />
          <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Rectangle Style="{StaticResource steamAppHeaderStyle}" Grid.ColumnSpan="2" />
        <TextBlock Text="{Binding Name}" TextAlignment="Center" Padding="0,3" Grid.ColumnSpan="2" />
        <ItemsControl Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Source={StaticResource myCardsView}}" ItemTemplate="{StaticResource cardTemplate}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
        <ItemsControl Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Source={StaticResource otherCardsView}}" ItemTemplate="{StaticResource cardTemplate}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel Orientation="Horizontal" HorizontalAlignment="Right" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </Grid>
    </DataTemplate>
  </Window.Resources>
  <Grid Name="mainGrid">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="40" />
      <ColumnDefinition Width="3*" />
      <ColumnDefinition Width="2*" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <Menu Grid.Row="0" Grid.ColumnSpan="3">
      <MenuItem Header="{x:Static resx:Strings.MenuItem_MyProfile}" >
        <MenuItem Header="{x:Static resx:Strings.MenuItem_Profile}" Command="ctl:ScehCommands.OpenProfilePageCommand" CommandParameter="{Binding OwnerProfile}" />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_Inventory}" Command="ctl:ScehCommands.OpenInventoryPageCommand" CommandParameter="{Binding OwnerProfile}" />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_Badges}" Command="ctl:ScehCommands.OpenUserBadgesCommand" CommandParameter="{Binding OwnerProfile}" />
        <Separator />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_TradeOffers}" Command="ctl:ScehCommands.OpenTradeOffersCommand" CommandParameter="{Binding OwnerProfile}" />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_TradeTopics}" Command="ctl:ScehCommands.OpenTradeTopicsCommand" CommandParameter="{Binding OwnerProfile}" />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_PostHistory}" Command="ctl:ScehCommands.OpenPostHistoryCommand" CommandParameter="{Binding OwnerProfile}" />
        <Separator />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_ChangeProfile}" Command="ApplicationCommands.New" />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_Exit}" Command="ApplicationCommands.Close" />
      </MenuItem>
      <MenuItem Header="{x:Static resx:Strings.MenuItem_OthersProfile}">
        <MenuItem Header="{x:Static resx:Strings.MenuItem_Profile}" Command="ctl:ScehCommands.OpenProfilePageCommand" CommandParameter="{Binding SecondProfile}" />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_Inventory}" Command="ctl:ScehCommands.OpenInventoryPageCommand" CommandParameter="{Binding SecondProfile}" />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_Badges}" Command="ctl:ScehCommands.OpenUserBadgesCommand" CommandParameter="{Binding SecondProfile}" />
        <Separator />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_PostHistory}" Command="ctl:ScehCommands.OpenPostHistoryCommand" CommandParameter="{Binding SecondProfile}" />
        <Separator />
        <MenuItem Header="{x:Static resx:Strings.MenuItem_EditNote}" Command="ctl:ScehCommands.EditNoteCommand" CommandParameter="{Binding SecondProfile.Notes}" />
      </MenuItem>
    </Menu>
    <ctl:LazyImage ImageFile="{Binding AvatarSmallUrl, Converter={StaticResource avatarImageFileConv}}" Stretch="None"
        NewFilePriority="{x:Static code:DownloadPriority.High}" OldFilePriority="{x:Static code:DownloadPriority.Low}"
        Source="{Binding LocalFilePath, RelativeSource={RelativeSource Self}, TargetNullValue={StaticResource defaultAvatar}, Mode=OneWay, IsAsync=True, Converter={StaticResource imageLoader}}"
        ContextMenu="{StaticResource profileMenu}" DataContext="{Binding OwnerProfile}" Grid.Row="1" Grid.RowSpan="2" />
    <TextBlock Text="{Binding Name}" DataContext="{Binding OwnerProfile}" VerticalAlignment="Center"
        ContextMenu="{StaticResource profileMenu}" FontSize="16" Margin="2" Grid.Row="1" Grid.Column="1" />
    <TextBlock Text="{Binding RequestCount, Source={x:Static code:SteamDataDownloader.Info}, StringFormat={x:Static resx:Strings.RequestCountFormat}}"
        VerticalAlignment="Center" FontSize="16" TextAlignment="Right" Margin="4,2" Grid.Row="1" Grid.Column="2" Style="{StaticResource requestCountStyle}" />
    <ctl:LazyImage ImageFile="{Binding AvatarSmallUrl, Converter={StaticResource avatarImageFileConv}}" Stretch="Uniform"
        NewFilePriority="{x:Static code:DownloadPriority.High}" OldFilePriority="{x:Static code:DownloadPriority.Low}"
        Source="{Binding LocalFilePath, RelativeSource={RelativeSource Self}, TargetNullValue={StaticResource defaultAvatar}, Mode=OneWay, IsAsync=True, Converter={StaticResource imageLoader}}"
        ContextMenu="{StaticResource profileMenu}" DataContext="{Binding SecondProfile}" Grid.Row="3" Height="26" />
    <TextBlock Text="{Binding Name}" DataContext="{Binding SecondProfile}" VerticalAlignment="Center"
        ContextMenu="{StaticResource profileMenu}" FontSize="16" Margin="2" Grid.Row="3" Grid.Column="1" />
    <ComboBox x:Name="cbOtherProfile" IsEditable="True" ItemsSource="{Binding SteamProfiles}"
        VerticalAlignment="Center" Style="{StaticResource steamProfileComboBox}" Grid.Row="2" Grid.Column="1">
      <ComboBox.InputBindings>
        <KeyBinding Command="ctl:ScehCommands.CompareCommand" Key="Return" />
      </ComboBox.InputBindings>
    </ComboBox>
    <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" Margin="2,0">
      <Button HorizontalAlignment="Left" Margin="2" Padding="2,0" DataContext="{Binding SelectedItem, ElementName=cbOtherProfile}"
          Command="ctl:ScehCommands.EditNoteCommand" CommandParameter="{Binding Notes}">
        <Image Source="{StaticResource noteIcon}" Stretch="None" Style="{DynamicResource noteIconToolTip}" />
      </Button>
      <Button Command="ctl:ScehCommands.CompareCommand" Content="{x:Static resx:Strings.CompareButtonText}"
          HorizontalAlignment="Left" Margin="2" Padding="20,2" />
    </StackPanel>
    <StackPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
      <TextBlock Text="{Binding ErrorMessage}" TextWrapping="Wrap" />
      <Rectangle VerticalAlignment="Stretch" Width="1" Margin="2" Stroke="{x:Static SystemColors.ControlLightBrush}" />
      <Button Command="ctl:ScehCommands.ShowHideCardsCommand" CommandParameter="{x:Static code:CardsCompareManager.ShowTradeSugestionsStrategy}" Margin="2">
        <Image Source="Img/selection1.png" Stretch="None" />
      </Button>
      <Button Command="ctl:ScehCommands.ShowHideCardsCommand" CommandParameter="{x:Static code:CardsCompareManager.ShowMyCardsStrategy}" Margin="2">
        <Image Source="Img/selection2.png" Stretch="None" />
      </Button>
      <Button Command="ctl:ScehCommands.ShowHideCardsCommand" CommandParameter="{x:Static code:CardsCompareManager.ShowAllStrategy}" Margin="2">
        <Image Source="Img/selection3.png" Stretch="None" />
      </Button>
      <Button Command="ctl:ScehCommands.ShowHideCardsCommand" CommandParameter="{x:Static code:CardsCompareManager.ShowOtherCardsStrategy}" Margin="2">
        <Image Source="Img/selection4.png" Stretch="None" />
      </Button>
      <Button Command="ctl:ScehCommands.ShowHideCardsCommand" CommandParameter="{x:Static code:CardsCompareManager.ShowSelectedAppStrategy}" Margin="2">
        <Image Source="Img/selection5.png" Stretch="None" />
      </Button>
      <Button Command="ctl:ScehCommands.ShowHideCardsCommand" CommandParameter="{x:Static code:CardsCompareManager.ShowOnlySelectedStrategy}" Margin="2">
        <Image Source="Img/selection6.png" Stretch="None" />
      </Button>
    </StackPanel>
    <ItemsControl Grid.Row="4" Grid.ColumnSpan="3" VirtualizingPanel.CacheLength="3" VirtualizingPanel.CacheLengthUnit="Item"
        ItemsSource="{Binding Source={StaticResource steamAppsView}}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
        ScrollViewer.CanContentScroll="True" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
        BorderThickness="0,1" ItemTemplate="{StaticResource steamAppTemplate}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.Template>
        <ControlTemplate>
          <Border SnapsToDevicePixels="True"
              BorderThickness="{TemplateBinding Border.BorderThickness}"
              Padding="{TemplateBinding Control.Padding}"
              BorderBrush="{TemplateBinding Border.BorderBrush}"
              Background="{TemplateBinding Panel.Background}">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </ItemsControl.Template>
    </ItemsControl>
    <StatusBar Grid.Row="5" Grid.ColumnSpan="3">
      <StatusBarItem>
        <TextBlock />
      </StatusBarItem>
    </StatusBar>
    <!--<Grid Name="noteEditForm" Grid.ColumnSpan="3" Grid.RowSpan="6" Visibility="Collapsed">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="10*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="3*" />
        <RowDefinition Height="11*" />
        <RowDefinition Height="2*" />
      </Grid.RowDefinitions>
      <Grid.Resources>
        <Color x:Key="overlayColor" A="64" R="96" G="96" B="96" />
        <SolidColorBrush x:Key="overlayColorBrush" ice:Freeze="True" Color="{StaticResource overlayColor}" />
        <Color x:Key="formColor" A="255" R="255" G="255" B="212" />
        <SolidColorBrush x:Key="formColorBrush" ice:Freeze="True" Color="{StaticResource formColor}" />
      </Grid.Resources>
      <Rectangle Grid.ColumnSpan="3" Grid.RowSpan="3" Fill="{StaticResource overlayColorBrush}" />
      <Border Grid.Column="1" Grid.Row="1" BorderThickness="1"
          BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Rectangle Grid.ColumnSpan="1" Grid.RowSpan="2" Fill="{StaticResource formColorBrush}" />
          <TextBox Name="tbMultiLine" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="2" />
          <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
            <Button Command="ApplicationCommands.Save" Content="Save" Margin="5" Padding="20,2" />
            <Button Command="ApplicationCommands.Close" Content="Close" Margin="5" Padding="20,2" />
          </StackPanel>
        </Grid>
      </Border>
    </Grid>-->
  </Grid>
</Window>